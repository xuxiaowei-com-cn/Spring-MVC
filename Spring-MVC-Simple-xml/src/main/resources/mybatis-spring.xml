<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 配置数据库连接池 -->
    <!-- 推荐使用：org.springframework.jdbc.datasource.DriverManagerDataSource -->
    <!-- 或者选用：org.springframework.jdbc.datasource.SimpleDriverDataSource -->
    <!-- 参见：https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/jdbc/datasource/SimpleDriverDataSource.html -->
    <!-- 参见（配置两个数据源）：https://docs.spring.io/spring-boot/docs/1.5.12.RELEASE/reference/html/howto-data-access.html#howto-two-datasources -->
    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${jdbc.driverClassName}"
          p:url="${jdbc.url}"
          p:username="${jdbc.username}"
          p:password="${jdbc.password}"/>-->
    <!-- 推荐使用 -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
          p:driverClassName="${jdbc.driverClassName}"
          p:jdbcUrl="${jdbc.url}"
          p:username="${jdbc.username}"
          p:password="${jdbc.password}"/>

    <!-- 连接工厂 -->
    <!-- 由于使用了 MyBatis Plus，连接工厂交付给 MyBatis Plus -->
    <!-- 参见：http://mybatis.org/spring/zh/getting-started.html -->
    <!-- 参见：http://mybatis.org/spring/zh/factorybean.html -->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:typeAliasesPackage="cn.com.xuxiaowei.entity"
          p:configLocation="classpath:mybatis-config.xml">

        &lt;!&ndash; SqlSessionFactory 有一个唯一的必要属性：用于 JDBC 的 DataSource。 &ndash;&gt;
        &lt;!&ndash; 参见：http://mybatis.org/spring/zh/factorybean.html &ndash;&gt;
        &lt;!&ndash; p:dataSource-ref="dataSource" &ndash;&gt;

        &lt;!&ndash; 扫描entity包 使用别名 &ndash;&gt;
        &lt;!&ndash; 在 Mapper XML 可直接使用实体类的名字，而不需要用全限定名 &ndash;&gt;
        &lt;!&ndash; p:typeAliasesPackage="cn.com.xuxiaowei.entity" &ndash;&gt;

        &lt;!&ndash; 配置MyBaties全局配置文件:mybatis-config.xml &ndash;&gt;
        &lt;!&ndash; SqlSessionFactory 一个常用的属性是 configLocation，它用来指定 MyBatis 的 XML 配置文件路径。 &ndash;&gt;
        &lt;!&ndash; 参见：http://mybatis.org/spring/zh/factorybean.html &ndash;&gt;
        &lt;!&ndash; p:configLocation="classpath:mybatis-config.xml" &ndash;&gt;

        &lt;!&ndash; mapperLocations 属性接受多个资源位置。 &ndash;&gt;
        &lt;!&ndash; 这个属性可以用来指定 MyBatis 的映射器 XML 配置文件的位置。 &ndash;&gt;
        &lt;!&ndash; 属性的值是一个 Ant 风格的字符串，可以指定加载一个目录中的所有文件，或者从一个目录开始递归搜索所有目录。 &ndash;&gt;
        &lt;!&ndash; <property name="mapperLocations" value="classpath:mapper/*.xml"/> &ndash;&gt;
        &lt;!&ndash; 参见：http://mybatis.org/spring/zh/factorybean.html &ndash;&gt;
        <property name="mapperLocations">
            <array>
                <value>classpath:mapper/*.xml</value>
                &lt;!&ndash; 多包 xml 扫描 &ndash;&gt;
                &lt;!&ndash; <value>classpath:Module/mapper/*.xml</value> &ndash;&gt;
            </array>
        </property>

    </bean>-->

    <!-- 导入 Mybatis-Plus 配置 -->
    <import resource="classpath:mybatis-plus.xml"/>

    <!-- 事务 -->
    <!-- 参见：http://mybatis.org/spring/zh/transactions.html -->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          c:dataSource-ref="dataSource"/>

    <!-- 使用注解定义事务 -->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>

    <!-- 映射器 -->
    <!-- base-package 属性允许你设置映射器接口文件的基础包。 -->
    <!-- 通过使用逗号或分号分隔，你可以设置多个包。 -->
    <!-- 并且会在你所指定的包中递归搜索映射器。 -->
    <!-- 参见：http://mybatis.org/spring/zh/mappers.html -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="cn.com.xuxiaowei.mapper"/>

</beans>