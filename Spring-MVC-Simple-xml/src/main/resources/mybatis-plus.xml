<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- MyBatis Plus 配置 -->

    <!-- 映射器，扫描 Mapper 接口 -->
    <!-- 已在：mybatis-spring.xml 中扫描 -->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="cn.com.xuxiaowei.mapper"/>-->

    <!-- 连接工厂 -->
    <!--
        mapper-locations：MyBatis Mapper 所对应的 XML 文件位置，如果您在 Mapper 中有自定义方法（XML 中有自定义实现），需要进行该配置，告诉 Mapper 所对应的 XML 文件位置。
                            必须配置（否则出现：org.apache.ibatis.binding.BindingException: Invalid bound statement (not found)）
        type-aliases-package：MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，
                                而不用使用全限定的类名（即 XML 中调用的时候不用包含包名）。
        type-enums-package：枚举类 扫描路径，如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性，
                            具体使用请结合 枚举注入（https://mp.baomidou.com/guide/enum.html） 查看。
    -->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:type-aliases-package="cn.com.xuxiaowei.entity"
          p:type-enums-package="cn.com.xuxiaowei.enums"
          p:global-config-ref="globalConfig"
          p:configuration-ref="mybatisConfiguration"
          p:mapperLocations="classpath:mapper/*.xml">

        <property name="plugins">
            <array>
                <!-- 分页插件 -->
                <bean class="com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor"/>
            </array>
        </property>

    </bean>

    <!--
        cache-enabled：缓存
    -->
    <bean id="mybatisConfiguration" class="com.baomidou.mybatisplus.core.MybatisConfiguration"
          p:cache-enabled="true"/>

    <bean id="globalConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig"
          p:db-config-ref="dbConfig"/>

    <!--
        logic-delete-value：逻辑已删除值,(逻辑删除下有效，默认值：1)
        logic-not-delete-value：逻辑未删除值,(逻辑删除下有效，默认值：0)
    -->
    <bean id="dbConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig.DbConfig"
          p:logic-delete-value="1"
          p:logic-not-delete-value="0"/>

</beans>