<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!-- 基于 Redis XML 的配置 -->
    <!-- https://docs.spring.io/spring-session/docs/current/reference/html5/#httpsession-xml-spring-configuration -->
    <!-- Spring Session 由 Redis 支持 -->
    <context:annotation-config/>


    <!-- 使用注解驱动，其中属性 cache-manager：默认值为：cacheManager，参见：http://www.springframework.org/schema/cache/spring-cache.xsd -->
    <!-- 如果名称相同，可缺省 -->
    <cache:annotation-driven cache-manager="redisCacheManager"/>

    <!-- 从 RedisTemplate 中获取连接 -->
    <!-- 直接使用 RedisTemplate 引入的连接 -->
    <!--<bean id="connectionFactory" factory-bean="redisTemplate" factory-method="getConnectionFactory"/>-->

    <!-- 省略一步检查 connectionFactory 是否为 null -->

    <!-- 检查 RedisConnectionFactory 是否为 null -->
    <!-- 创建新的无锁 RedisCacheWriter -->
    <!-- 使用 JedisConnectionFactory 连接池时使用：jedisConnectionFactory -->
    <!-- 使用 LettuceConnectionFactory 连接池时使用：lettuceConnectionFactory -->
    <bean id="redisCacheWriter" class="org.springframework.data.redis.cache.RedisCacheWriter"
          factory-method="nonLockingRedisCacheWriter"
          c:connectionFactory-ref="lettuceConnectionFactory"/>

    <!-- 获取 RedisTemplate 的序列化 -->
    <!-- 直接使用 RedisTemplate 引入的序列化 -->
    <!--<bean id="getValueSerializer" factory-bean="redisTemplate" factory-method="getValueSerializer"/>-->

    <!-- 序列化对 -->
    <!-- c:serializer-ref="getValueSerializer" 或者直接使用 c:serializer-ref="valueSerializer" -->
    <bean id="serializationPair"
          class="org.springframework.data.redis.serializer.RedisSerializationContext.SerializationPair"
          factory-method="fromSerializer"
          c:serializer-ref="valueSerializer"/>

    <!-- 获取默认缓存配置 -->
    <bean id="redisCacheConfiguration" class="org.springframework.data.redis.cache.RedisCacheConfiguration"
          factory-method="defaultCacheConfig"/>

    <!-- 设置序列化 -->
    <bean id="defaultCacheConfiguration" factory-bean="redisCacheConfiguration" factory-method="serializeValuesWith"
          c:valueSerializationPair-ref="serializationPair"/>

    <!-- 创建并返回 Redis 缓存管理 -->
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"
          c:cacheWriter-ref="redisCacheWriter"
          c:defaultCacheConfiguration-ref="defaultCacheConfiguration"/>

    <!-- 开启 Redis Session 缓存 -->
    <bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration"/>

    <!-- 导入激活 Redis 单机版配置 -->
    <import resource="classpath:redis-single.xml"/>

    <!-- 导入激活 Redis 集群配置 -->
    <!--<import resource="classpath:redis-cluster.xml"/>-->

    <!-- 通过 RedisTemplate 处理对象 -->
    <!-- 字符串 -->
    <!-- Redis 模板定义 -->
    <!-- p:connection-factory-ref：根据连接池配置 -->
    <!-- 使用 JedisConnectionFactory 连接池时使用：jedisConnectionFactory -->
    <!-- 使用 LettuceConnectionFactory 连接池时使用：lettuceConnectionFactory -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connection-factory-ref="lettuceConnectionFactory"
          p:keySerializer-ref="keySerializer"
          p:valueSerializer-ref="valueSerializer"
          init-method="afterPropertiesSet"/>

    <!--  -->
    <bean id="keySerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <!--  -->
    <bean id="valueSerializer" class="org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer"
          c:type="java.lang.Object"
          p:objectMapper-ref="objectMapper"/>

    <!-- 使用自定义序列化 -->
    <bean id="objectMapper" class="cn.com.xuxiaowei.util.CustomObjectMapper" factory-method="defaultObjectMapper"/>

</beans>